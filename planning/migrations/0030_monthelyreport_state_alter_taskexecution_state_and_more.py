# Generated by Django 5.0.2 on 2025-01-09 14:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('company_profile', '0084_alter_appborrowmaterial_company_from_str'),
        ('planning', '0029_othermineralstask'),
    ]

    operations = [
        migrations.AddField(
            model_name='monthelyreport',
            name='state',
            field=models.IntegerField(choices=[(1, 'state_draft'), (2, 'state_confirmed')], default=1, verbose_name='record_state'),
        ),
        migrations.AlterField(
            model_name='taskexecution',
            name='state',
            field=models.IntegerField(choices=[(1, 'state_draft'), (2, 'state_confirmed')], default=1, verbose_name='record_state'),
        ),
        migrations.CreateModel(
            name='CompanyInfoTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.tblcompanyproduction', verbose_name='company')),
                ('nationality', models.ManyToManyField(default=[1], to='company_profile.lkpnationality', verbose_name='nationality')),
                ('status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.lkpcompanyproductionstatus', verbose_name='status')),
                ('task_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='planning.taskexecution', verbose_name='task_execution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyLicenseInfoTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_no', models.CharField(max_length=20, verbose_name='License no')),
                ('license_type', models.IntegerField(blank=True, choices=[(1, 'license_type_2tifagia'), (2, 'license_type_3agd'), (3, 'license_type_rokh9a')], null=True, verbose_name='license_type')),
                ('date', models.DateField(verbose_name='Sign date')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='Area in Kilometers')),
                ('area_initial', models.FloatField(blank=True, default=0, null=True, verbose_name='Initial area in Kilometers')),
                ('reserve', models.FloatField(blank=True, null=True, verbose_name='Reserve in Tones')),
                ('contract_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.lkpcompanyproductionlicensestatus', verbose_name='contract_status')),
                ('license', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.tblcompanyproductionlicense', verbose_name='license')),
                ('mineral', models.ManyToManyField(default=[1], to='company_profile.lkpmineral', verbose_name='mineral')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.lkpstate', verbose_name='state')),
                ('task_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='planning.taskexecution', verbose_name='task_execution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExportGoldCompanyTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_total_weight', models.FloatField(verbose_name='raw_total_weight')),
                ('net_total_weight', models.FloatField(verbose_name='net_total_weight')),
                ('no_alloy', models.IntegerField(verbose_name='no_alloy')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.tblcompanyproduction', verbose_name='company')),
                ('task_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='planning.taskexecution', verbose_name='task_execution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExportGoldTraditionalTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raw_total_weight', models.FloatField(verbose_name='raw_total_weight')),
                ('net_total_weight', models.FloatField(verbose_name='net_total_weight')),
                ('total_dollar', models.FloatField(verbose_name='total_dollar')),
                ('task_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='planning.taskexecution', verbose_name='task_execution')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TraditionalStateTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('soug', models.IntegerField(verbose_name='soug')),
                ('grabeel', models.IntegerField(verbose_name='grabeel')),
                ('hofra_kabira', models.IntegerField(verbose_name='hofra_kabira')),
                ('abar_khtot_intag', models.IntegerField(verbose_name='abar_khtot_intag')),
                ('ajhizat_bahth', models.IntegerField(verbose_name='ajhizat_bahth')),
                ('mo3dinin_sosal', models.IntegerField(verbose_name='mo3dinin_sosal')),
                ('toahin_ratiba', models.IntegerField(verbose_name='toahin_ratiba')),
                ('toahin_jafa', models.IntegerField(verbose_name='toahin_jafa')),
                ('state', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='company_profile.lkpstate', verbose_name='state')),
                ('task_execution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='planning.taskexecution', verbose_name='task_execution')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
