# Generated by Django 5.1.7 on 2025-04-21 12:21

import django.core.validators
import django.db.models.deletion
import hse_companies.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('company_profile', '0117_lkpsector_lkpstate_sector'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppHSEPerformanceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated_at')),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(limit_value=2015), django.core.validators.MaxValueValidator(limit_value=2100)], verbose_name='year')),
                ('month', models.PositiveIntegerField(choices=[(1, 'MONTH_JAN'), (2, 'MONTH_FEB'), (3, 'MONTH_MAR'), (4, 'MONTH_APR'), (5, 'MONTH_MAY'), (6, 'MONTH_JUN'), (7, 'MONTH_JLY'), (8, 'MONTH_AUG'), (9, 'MONTH_SEP'), (10, 'MONTH_OCT'), (11, 'MONTH_NOV'), (12, 'MONTH_DEC')], verbose_name='month')),
                ('album', models.FileField(blank=True, null=True, upload_to=hse_companies.models.company_applications_path, verbose_name='album')),
                ('note', models.TextField(blank=True, null=True, verbose_name='comment')),
                ('state', models.IntegerField(choices=[(1, 'draft'), (2, 'confirmed'), (3, 'approved')], default=1, verbose_name='record_state')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='hse_performance_report', to='company_profile.tblcompanyproduction', verbose_name='company')),
                ('created_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='created_by')),
                ('updated_by', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.PROTECT, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='updated_by')),
            ],
            options={
                'verbose_name': 'Application: HSE Performance Report',
                'verbose_name_plural': 'Application: HSE Performance Report',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'ACTIVITIES_type1'), (2, 'ACTIVITIES_type2'), (3, 'ACTIVITIES_type3'), (4, 'ACTIVITIES_type4'), (5, 'ACTIVITIES_type5'), (6, 'ACTIVITIES_type6'), (7, 'ACTIVITIES_type7'), (8, 'ACTIVITIES_type8'), (9, 'ACTIVITIES_type9'), (10, 'ACTIVITIES_type10'), (11, 'ACTIVITIES_type11')], verbose_name='hse_activities')),
                ('no_staff', models.PositiveIntegerField(verbose_name='no_staff')),
                ('no_contractor', models.PositiveIntegerField(verbose_name='no_contractor')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE activities',
                'verbose_name_plural': 'HSE activities',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportBillsOfQuantities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'BILLS_OF_QUANTITIES1'), (2, 'BILLS_OF_QUANTITIES2'), (3, 'BILLS_OF_QUANTITIES3'), (4, 'BILLS_OF_QUANTITIES4'), (5, 'BILLS_OF_QUANTITIES5'), (6, 'BILLS_OF_QUANTITIES6'), (7, 'BILLS_OF_QUANTITIES7'), (8, 'BILLS_OF_QUANTITIES8'), (9, 'BILLS_OF_QUANTITIES9'), (10, 'BILLS_OF_QUANTITIES10')], verbose_name='hse_bills_of_quantities')),
                ('qty_used', models.PositiveIntegerField(verbose_name='qty_used')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE BILLS OF QUANTITIES',
                'verbose_name_plural': 'HSE BILLS OF QUANTITIES',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportCadastralOperations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'CADASTRAL_SPECIFICATION1'), (2, 'CADASTRAL_SPECIFICATION2'), (3, 'CADASTRAL_SPECIFICATION3'), (4, 'CADASTRAL_SPECIFICATION4'), (5, 'CADASTRAL_SPECIFICATION5'), (6, 'CADASTRAL_SPECIFICATION6'), (7, 'CADASTRAL_SPECIFICATION7'), (8, 'CADASTRAL_SPECIFICATION8'), (9, 'CADASTRAL_SPECIFICATION9')], verbose_name='Specification')),
                ('value', models.CharField(max_length=100, verbose_name='value')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE cadastral operations',
                'verbose_name_plural': 'HSE cadastral operations',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportCadastralOperationsTwo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'CADASTRAL2_SPECIFICATION1'), (2, 'CADASTRAL2_SPECIFICATION2'), (3, 'CADASTRAL2_SPECIFICATION3'), (4, 'CADASTRAL2_SPECIFICATION4'), (5, 'CADASTRAL2_SPECIFICATION5'), (6, 'CADASTRAL2_SPECIFICATION6'), (7, 'CADASTRAL2_SPECIFICATION7')], verbose_name='Specification')),
                ('observation', models.CharField(max_length=100, verbose_name='observation')),
                ('result', models.CharField(max_length=100, verbose_name='result')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE cadastral operations2',
                'verbose_name_plural': 'HSE cadastral operations2',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportCatering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meal_served_type', models.CharField(max_length=100, verbose_name='meal_served')),
                ('food_sources', models.CharField(max_length=100, verbose_name='food_sources')),
                ('food_transportation', models.CharField(max_length=100, verbose_name='food_transportation')),
                ('food_storage', models.TextField(verbose_name='food_storage')),
                ('kitchen_cleaning', models.TextField(verbose_name='kitchen_cleaning')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE Catering',
                'verbose_name_plural': 'HSE Catering',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportChemicalUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'CHEMICAL_USED1'), (2, 'CHEMICAL_USED2'), (3, 'CHEMICAL_USED3'), (4, 'CHEMICAL_USED4'), (5, 'CHEMICAL_USED5')], verbose_name='hse_chemical_used')),
                ('qty_used', models.PositiveIntegerField(verbose_name='qty_used')),
                ('qty_in_store', models.PositiveIntegerField(verbose_name='qty_in_store')),
                ('expire_dt', models.DateField(blank=True, default='', help_text='Ex: 2025-01-31', null=True, verbose_name='expire_dt')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE CHEMICAL USED',
                'verbose_name_plural': 'HSE CHEMICAL USED',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportCyanideCNStorageSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'SPECIFICATION1'), (2, 'SPECIFICATION2'), (3, 'SPECIFICATION3'), (4, 'SPECIFICATION4')], verbose_name='Specification')),
                ('choice', models.PositiveIntegerField(choices=[(1, 'YES'), (2, 'NO')], verbose_name='is_exists')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE CYANIDE CN Storage Specification',
                'verbose_name_plural': 'HSE CYANIDE CN Storage Specification',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportCyanideTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_method', models.PositiveIntegerField(choices=[(1, 'STORAGE_METHOD1'), (2, 'STORAGE_METHOD2')], verbose_name='storage_method')),
                ('handling_method', models.PositiveIntegerField(choices=[(1, 'HANDLING_METHOD1'), (2, 'HANDLING_METHOD2'), (3, 'HANDLING_METHOD3')], verbose_name='handling_method')),
                ('hcn_detector', models.PositiveIntegerField(choices=[(1, 'YES'), (2, 'NO')], verbose_name='hcn_detector')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE CYANIDE TABLE',
                'verbose_name_plural': 'HSE CYANIDE TABLE',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportDiseasesForWorkers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disease_dt', models.DateField(help_text='Ex: 2025-01-31', verbose_name='disease_dt')),
                ('disease_type', models.CharField(max_length=100, verbose_name='disease_type')),
                ('no_patients', models.PositiveIntegerField(verbose_name='no_patients')),
                ('patients_career', models.CharField(max_length=100, verbose_name='patients_career')),
                ('patients_worksite', models.CharField(max_length=100, verbose_name='patients_worksite')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE Diseases For Workers',
                'verbose_name_plural': 'HSE Diseases For Workers',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportExplosivesUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'EXPLOSIVES_USED1'), (2, 'EXPLOSIVES_USED2'), (3, 'EXPLOSIVES_USED3'), (4, 'EXPLOSIVES_USED4'), (5, 'EXPLOSIVES_USED5'), (6, 'EXPLOSIVES_USED6'), (7, 'EXPLOSIVES_USED7'), (8, 'EXPLOSIVES_USED8'), (9, 'EXPLOSIVES_USED9')], verbose_name='hse_explosives_used')),
                ('qty_used', models.PositiveIntegerField(verbose_name='qty_used')),
                ('qty_remain', models.PositiveIntegerField(verbose_name='qty_remain')),
                ('expire_dt', models.DateField(help_text='Ex: 2025-01-31', verbose_name='expire_dt')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE EXPLOSIVES USED',
                'verbose_name_plural': 'HSE EXPLOSIVES USED',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportExplosivesUsedSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'EXP_SPECIFICATION1'), (2, 'EXP_SPECIFICATION2'), (3, 'EXP_SPECIFICATION3'), (4, 'EXP_SPECIFICATION4'), (5, 'EXP_SPECIFICATION5')], verbose_name='Specification')),
                ('choice', models.PositiveIntegerField(choices=[(1, 'YES'), (2, 'NO')], verbose_name='is_exists')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE Explosive Storage Specification',
                'verbose_name_plural': 'HSE Explosive Storage Specification',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportFireFighting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'fire_fighting_1'), (2, 'fire_fighting_2'), (3, 'fire_fighting_3'), (4, 'fire_fighting_4'), (5, 'fire_fighting_5')], verbose_name='hse_fire_fighting')),
                ('size', models.PositiveIntegerField(verbose_name='size')),
                ('count', models.PositiveIntegerField(verbose_name='count')),
                ('exam_dt', models.DateField(help_text='Ex: 2025-01-31', verbose_name='exam_dt')),
                ('situation', models.PositiveIntegerField(choices=[(1, 'situation_ok'), (2, 'situation_bad')], verbose_name='situation')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE fire fighting',
                'verbose_name_plural': 'HSE fire fighting',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportManPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'man_power_total'), (2, 'man_power_work_hours')], verbose_name='hse_man_power')),
                ('no_gov', models.PositiveIntegerField(verbose_name='no_gov')),
                ('no_staff', models.PositiveIntegerField(verbose_name='no_staff')),
                ('no_contractor', models.PositiveIntegerField(verbose_name='no_contractor')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE Man power',
                'verbose_name_plural': 'HSE Man power',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportOilUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'OIL_USED1'), (2, 'OIL_USED2'), (3, 'OIL_USED3')], verbose_name='hse_oil_used')),
                ('qty_used', models.FloatField(verbose_name='qty_used')),
                ('disposal_method', models.CharField(verbose_name='disposal_method')),
                ('storage_method', models.CharField(verbose_name='storage_method')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE OIL USED',
                'verbose_name_plural': 'HSE OIL USED',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportOtherChemicalUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='not exists', max_length=100, verbose_name='hse_chemical_used')),
                ('qty_used', models.PositiveIntegerField(blank=True, null=True, verbose_name='qty_used')),
                ('qty_in_store', models.PositiveIntegerField(blank=True, null=True, verbose_name='qty_in_store')),
                ('expire_dt', models.DateField(blank=True, help_text='Ex: 2025-01-31', null=True, verbose_name='expire_dt')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE OTHER CHEMICAL USED',
                'verbose_name_plural': 'HSE OTHER CHEMICAL USED',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportProactiveIndicators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'proactive_indicators_type1'), (2, 'proactive_indicators_type2'), (3, 'proactive_indicators_type3'), (4, 'proactive_indicators_type4')], verbose_name='hse_proactive_indicators')),
                ('no_staff', models.PositiveIntegerField(verbose_name='no_staff')),
                ('no_contractor', models.PositiveIntegerField(verbose_name='no_contractor')),
                ('action', models.CharField(max_length=100, verbose_name='action')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='description')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE proactive indicators',
                'verbose_name_plural': 'HSE proactive indicators',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportStatisticalData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, ' STATISTICAL_DATA1'), (2, ' STATISTICAL_DATA2'), (3, ' STATISTICAL_DATA3'), (4, ' STATISTICAL_DATA4')], verbose_name='hse_statistical_data')),
                ('no_staff', models.PositiveIntegerField(verbose_name='no_staff')),
                ('no_contractor', models.PositiveIntegerField(verbose_name='no_contractor')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE STATISTICAL DATA',
                'verbose_name_plural': 'HSE STATISTICAL DATA',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportTherapeuticUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_manager', models.CharField(max_length=100, verbose_name='unit_manager')),
                ('unit_phone', models.CharField(max_length=100, verbose_name='unit_phone')),
                ('unit_qualification', models.PositiveIntegerField(choices=[(1, 'QUALIFICATION1'), (2, 'QUALIFICATION2')], verbose_name='unit_qualification')),
                ('aid_qty_used', models.PositiveIntegerField(verbose_name='aid_qty_used')),
                ('ambulance_used', models.PositiveIntegerField(choices=[(1, 'AMBULANCE_USED1'), (2, 'AMBULANCE_USED2'), (3, 'AMBULANCE_USED3')], verbose_name='ambulance_used')),
                ('periodic_medical_examination', models.PositiveIntegerField(choices=[(1, 'YES'), (2, 'NO')], verbose_name='periodic_medical_examination')),
                ('primary_medical_examination', models.PositiveIntegerField(choices=[(1, 'YES'), (2, 'NO')], verbose_name='primary_medical_examination')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE Therapeutic unit',
                'verbose_name_plural': 'HSE Therapeutic unit',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportWasteDisposal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'WASTE_DISPOSAL1'), (2, 'WASTE_DISPOSAL2'), (3, 'WASTE_DISPOSAL3'), (4, 'WASTE_DISPOSAL4'), (5, 'WASTE_DISPOSAL5'), (6, 'WASTE_DISPOSAL6'), (7, 'WASTE_DISPOSAL7'), (8, 'WASTE_DISPOSAL8'), (9, 'WASTE_DISPOSAL9'), (10, 'WASTE_DISPOSAL10'), (11, 'WASTE_DISPOSAL11'), (12, 'WASTE_DISPOSAL12'), (13, 'WASTE_DISPOSAL13'), (14, 'WASTE_DISPOSAL14'), (15, 'WASTE_DISPOSAL15')], verbose_name='hse_WASTE_DISPOSAL')),
                ('qty_used', models.FloatField(verbose_name='qty_used')),
                ('disposal_method', models.CharField(verbose_name='disposal_method')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE WASTE DISPOSAL',
                'verbose_name_plural': 'HSE WASTE DISPOSAL',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportWaterUsed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'WATER_USED1'), (2, 'WATER_USED2'), (3, 'WATER_USED3'), (4, 'WATER_USED4')], verbose_name='hse_water_used')),
                ('qty_used', models.FloatField(verbose_name='qty_used')),
                ('source_of_water', models.CharField(verbose_name='source_of_water')),
                ('storage_method', models.CharField(verbose_name='storage_method')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE WATER USED',
                'verbose_name_plural': 'HSE WATER USED',
            },
        ),
        migrations.CreateModel(
            name='AppHSEPerformanceReportWorkEnvironment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factor', models.PositiveIntegerField(choices=[(1, 'work_environment_factor1'), (2, 'work_environment_factor2'), (3, 'work_environment_factor3'), (4, 'work_environment_factor4'), (5, 'work_environment_factor5'), (6, 'work_environment_factor6'), (7, 'work_environment_factor7'), (8, 'work_environment_factor8')], verbose_name='hse_work_environment')),
                ('offices', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='offices')),
                ('camp', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='camp')),
                ('kitchen_dining', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='kitchen_dining')),
                ('factory', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='factory')),
                ('stores', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='Stores')),
                ('lab', models.PositiveIntegerField(choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], default=4, verbose_name='lab')),
                ('mines', models.PositiveIntegerField(blank=True, choices=[(1, 'ranking_excellent'), (2, 'ranking_very_good'), (3, 'ranking_good'), (4, 'ranking_bad')], null=True, verbose_name='mines')),
                ('master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='hse_companies.apphseperformancereport')),
            ],
            options={
                'verbose_name': 'HSE work environment',
                'verbose_name_plural': 'HSE work environment',
            },
        ),
    ]
